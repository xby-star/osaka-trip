// ËøîÂõûÈ°∂ÈÉ®ÊåâÈíÆÂäüËÉΩ
const backToTopButton = document.getElementById('back-to-top');

window.addEventListener('scroll', () => {
    if (window.pageYOffset > 300) {
        backToTopButton.style.display = 'flex';
    } else {
        backToTopButton.style.display = 'none';
    }
});

backToTopButton.addEventListener('click', () => {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
});

// ÂõæÁâáÁÇπÂáªÊîæÂ§ßÂäüËÉΩ
document.querySelectorAll('.trip-image').forEach(image => {
    image.addEventListener('click', () => {
        const modal = document.createElement('div');
        modal.className = 'image-modal';
        modal.innerHTML = `
            <div class="modal-content">
                <span class="close-button">&times;</span>
                <img src="${image.src}" alt="${image.alt}">
            </div>
        `;
        document.body.appendChild(modal);

        const closeButton = modal.querySelector('.close-button');
        closeButton.addEventListener('click', () => {
            modal.remove();
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.remove();
            }
        });
    });
});

// ËØÑËÆ∫ÂäüËÉΩ
function addComment(dayId) {
    const commentInput = document.getElementById(`comment-input-${dayId}`);
    const commentText = commentInput.value.trim();

    if (commentText) {
        const currentDate = new Date().toLocaleString();
        const randomName = `Ê∏∏ÂÆ¢${Math.floor(Math.random() * 1000)}`;
        
        const commentData = {
            content: commentText,
            author: randomName,
            date: currentDate,
            likes: 0,
            dayId: dayId
        };

        // ‰øùÂ≠òËØÑËÆ∫Âà∞Firebase
        const commentsRef = database.ref('comments');
        commentsRef.push(commentData)
            .then(() => {
                console.log('ËØÑËÆ∫‰øùÂ≠òÊàêÂäü');
                commentInput.value = '';
            })
            .catch(error => {
                console.error('‰øùÂ≠òËØÑËÆ∫Êó∂Âá∫Èîô:', error);
                alert('ËØÑËÆ∫‰øùÂ≠òÂ§±Ë¥•: ' + error.message);
            });
    }
}

// ÁÇπËµûÂäüËÉΩ
function likeComment(commentId, currentLikes) {
    const commentRef = database.ref(`comments/${commentId}`);
    commentRef.update({
        likes: currentLikes + 1
    })
    .then(() => {
        console.log('ÁÇπËµûÊàêÂäü');
    })
    .catch(error => {
        console.error('ÁÇπËµûÂ§±Ë¥•:', error);
        alert('ÁÇπËµûÂ§±Ë¥•: ' + error.message);
    });
}

// Âà†Èô§ËØÑËÆ∫
function deleteComment(commentId) {
    if (confirm('Á°ÆÂÆöË¶ÅÂà†Èô§ËøôÊù°ËØÑËÆ∫ÂêóÔºü')) {
        const commentRef = database.ref(`comments/${commentId}`);
        commentRef.remove()
        .then(() => {
            console.log('ËØÑËÆ∫Âà†Èô§ÊàêÂäü');
        })
        .catch(error => {
            console.error('Âà†Èô§ËØÑËÆ∫Â§±Ë¥•:', error);
            alert('Âà†Èô§Â§±Ë¥•: ' + error.message);
        });
    }
}

// Âä†ËΩΩËØÑËÆ∫
function loadComments() {
    console.log('ÂºÄÂßãÂä†ËΩΩËØÑËÆ∫...');
    const commentsRef = database.ref('comments');
    
    commentsRef.on('value', 
        (snapshot) => {
            console.log('Êî∂Âà∞ËØÑËÆ∫Êï∞ÊçÆ:', snapshot.val());
            const comments = snapshot.val();
            if (comments) {
                // Ê∏ÖÁ©∫ÊâÄÊúâËØÑËÆ∫ÂàóË°®
                document.querySelectorAll('.comments-list').forEach(list => {
                    list.innerHTML = '';
                });

                // ÊåâÊó•ÊúüÊéíÂ∫èËØÑËÆ∫
                const sortedComments = Object.entries(comments)
                    .map(([id, comment]) => ({ id, ...comment }))
                    .sort((a, b) => new Date(b.date) - new Date(a.date));

                // ÊòæÁ§∫ËØÑËÆ∫
                sortedComments.forEach(comment => {
                    const commentsList = document.getElementById(`comments-${comment.dayId}`);
                    if (commentsList) {
                        const commentElement = document.createElement('div');
                        commentElement.className = 'comment';
                        commentElement.innerHTML = `
                            <div class="comment-header">
                                <span>${comment.author}</span>
                                <span>${comment.date}</span>
                            </div>
                            <div class="comment-content">${comment.content}</div>
                            <div class="comment-actions">
                                <button onclick="likeComment('${comment.id}', ${comment.likes})">üëç ${comment.likes}</button>
                                <button onclick="deleteComment('${comment.id}')">üóëÔ∏è Âà†Èô§</button>
                            </div>
                        `;
                        commentsList.appendChild(commentElement);
                    }
                });
            } else {
                console.log('Ê≤°ÊúâËØÑËÆ∫Êï∞ÊçÆ');
            }
        },
        (error) => {
            console.error('Âä†ËΩΩËØÑËÆ∫Â§±Ë¥•:', error);
            alert('Âä†ËΩΩËØÑËÆ∫Â§±Ë¥•: ' + error.message);
        }
    );
}

// È°µÈù¢Âä†ËΩΩÊó∂Âä†ËΩΩËØÑËÆ∫
document.addEventListener('DOMContentLoaded', () => {
    console.log('È°µÈù¢Âä†ËΩΩÂÆåÊàêÔºåÂàùÂßãÂåñËØÑËÆ∫Á≥ªÁªü...');
    loadComments();
});

// Ê∑ªÂä†Âπ≥ÊªëÊªöÂä®
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth'
            });
        }
    });
}); 